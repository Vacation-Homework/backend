plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.vacation.homework'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


dependencies {
	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'

	implementation 'me.paulschwarz:spring-dotenv:4.0.0'

	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// JPA + MySQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// QueryDSL
	//implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	//annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	//annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	//annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// Security + JWT
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Firebase Admin SDK
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// RabbitMQ
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 설정
def querydslDir = 'src/main/generated'

sourceSets {
	main {
		java.srcDirs += [querydslDir]
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}